# -*- coding: utf-8 -*-
# Gmsh - Copyright (C) 1997-2020 C. Geuzaine, J.-F. Remacle
#
# See the LICENSE.txt file for license information. Please report all
# issues on https://gitlab.onelab.info/gmsh/gmsh/issues.

import os
import setuptools
import sys

setupdir = os.environ["GMSH_SETUP_DIR"]
sdkdir = os.environ["GMSH_SDK_DIR"]

version = '${GMSH_MAJOR_VERSION}.${GMSH_MINOR_VERSION}.${GMSH_PATCH_VERSION}'
iversion = version + ''  # installer version (+ '-1' will create '.post1')


def gen_install_list(subdir):
    for dirpath, dirs, files in os.walk(subdir):
        if len(files) != 0:
            filepaths = [os.path.join(dirpath, f) for f in files]
            relpath = os.path.relpath(dirpath, sdkdir)
            data_files.append((relpath, filepaths))
libversion = ".".join(version.split(".")[:2])

if os.path.isfile(sdkdir+'/lib/gmsh-'+libversion+'.dll'):
    scripts = [os.path.join(setupdir,'gmsh'),
               os.path.join(setupdir,'gmsh.bat')]
    libs = ['gmsh.lib','gmsh-'+libversion+'.dll','gmsh.jl']
    exe = 'gmsh.exe'
elif os.path.isfile(sdkdir+'/lib/libgmsh.so.'+libversion):
    scripts = [os.path.join(setupdir,'gmsh')]
    libs = ['libgmsh.so.'+libversion,'gmsh.jl']
    exe  = 'gmsh'
elif os.path.isfile(sdkdir+'/lib/libgmsh.'+libversion+'.dylib'):
    scripts = [os.path.join(setupdir,'gmsh')]
    libs = ['libgmsh.'+libversion+'.dylib']
    exe  = 'gmsh'
else :
    print("library not found")
    exit(1)

data_files = [('lib', list(os.path.join(sdkdir+'/lib', lib) for lib in libs) +
                       [os.path.join(sdkdir+'/bin', exe)])]
gen_install_list(sdkdir+'/share')
gen_install_list(sdkdir+'/include')

setuptools.setup(
    name='gmsh',
    version=iversion,
    description='Gmsh app and SDK installer. Gmsh is a three-dimensional '
                'finite element mesh generator with built-in pre- and '
                'post-processing facilities.',
    long_description=open(os.path.join(setupdir, 'README.rst'), 'r').read(),
    long_description_content_type='text/x-rst',
    maintainer='Christophe Geuzaine',
    maintainer_email='cgeuzaine@uliege.be',
    keywords=['fem', 'mesh', 'finite element method', 'cad'],
    url='https://gmsh.info',
    license='GPL-2',
    platforms='Posix, Windows',
    classifiers=['Development Status :: 5 - Production/Stable',
                 'Intended Audience :: Education',
                 'Intended Audience :: Science/Research',
                 'License :: OSI Approved :: '
                 'GNU General Public License v2 or later (GPLv2+)',
                 'Operating System :: POSIX :: Linux',
                 'Operating System :: Microsoft :: Windows',
                 'Operating System :: MacOS :: MacOS X',
                 'Programming Language :: C',
                 'Programming Language :: C++',
                 'Programming Language :: Python',
                 'Topic :: Scientific/Engineering'],
    scripts=scripts,
    setup_requires=['requests'],
    package_dir={'': os.path.join(sdkdir+'/lib')},
    data_files=data_files)
